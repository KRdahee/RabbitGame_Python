[미션]
토끼가 당근들에게 둘러싸여 있네요!! 토끼를 당근이 있는 곳으로 움직인 다음 당근을 뽑아봅시다.

# 토끼와 엘리스월드를 불러올 모듈을 호출합니다.
from elicerabbits import *

# 토끼와 엘리스월드를 소환합니다!
load_world("worlds/harvest1.wld")
rabbit = Rabbit("rabbit", 'E', 0, 3, 3)
rabbit.set_pause(0.5)
# 토끼의 경로를 파란색으로 표시합니다.
rabbit.set_trace('blue')

# 토끼가 당근을 모두 수확할 수 있도록 아래 코드를 작성해주세요!
def rabbit_moves():
    rabbit.move()
    rabbit.pick_carrot()
    rabbit.turn_left()
    rabbit.turn_left()
    rabbit.move()
    
    # 당근을 뽑습니다 
    
    # 뒤로 돕니다
     
    # 앞으로 이동합니다 

rabbit_moves()
rabbit_moves()
rabbit.turn_left()
rabbit_moves()
rabbit_moves()

[미션]
당근 배달하기. 계단 맨 끝에 당근을 심고 다시 원위치로 돌아와 봅시다.
앞으로 한 칸 가기: rabbit.move()

좌회전: rabbit.turn_left()

당근 심기: rabbit.drop_carrot()

Tip!
오른쪽을 돌아보는 turn_right() 함수를 작성해보세요.
계단을 올라가는 함수, 내려가는 함수를 작성해보세요. 함수 이름은 함수의 기능을 쉽게 이해할 수 있도록 설정하면 좋겠죠?

방법1

def turn_right():
    rabbit.turn_left()
    rabbit.turn_left()
    rabbit.turn_left()

def upstair():
    rabbit.turn_left()
    rabbit.turn_left()
    rabbit.turn_left()
    rabbit.move()
    rabbit.turn_left()
    rabbit.turn_left()
    rabbit.turn_left()
    rabbit.move()
    rabbit.move()

def downstair():
    rabbit.move()
    rabbit.move()
    rabbit.turn_left()
    rabbit.move()
    rabbit.turn_right()
    rabbit.move()

rabbit.move()
turn_right()
for i in range(4):
    upstair()

rabbit.drop_carrot()
rabbit.turn_left()
rabbit.turn_left()
for i in range(4):
    downstair()

rabbit.move()

방법 2

# 이상한 나라를 구현하기 위한 코드입니다. 수정하지 마세요! (토끼가 다쳐요 ㅠㅠ).
from elicerabbits import *
import time as _time
load_world("worlds/delivery.wld")
rabbit = Rabbit(carrots = 1)
rabbit.set_trace('red')
rabbit.set_pause(0.2)
_time.sleep(0.5)

def turn_right():
    rabbit.turn_left()
    rabbit.move()
    rabbit.turn_left()
    rabbit.turn_left()
    rabbit.turn_left()
    rabbit.move()
    rabbit.move()
    rabbit.turn_left()
    rabbit.move()
    rabbit.turn_left()
    rabbit.turn_left()
    rabbit.turn_left()
    rabbit.move()
    rabbit.move()
    rabbit.turn_left()
    rabbit.move()
    rabbit.turn_left()
    rabbit.turn_left()
    rabbit.turn_left()
    rabbit.move()
    rabbit.move()
    rabbit.turn_left()
    rabbit.move()
    rabbit.turn_left()
    rabbit.turn_left()
    rabbit.turn_left()
    rabbit.move()
    rabbit.move()
    rabbit.drop_carrot()
    rabbit.turn_left()
    rabbit.turn_left()
    rabbit.move()
    rabbit.move()
    rabbit.turn_left()
    rabbit.move()
    rabbit.turn_left()
    rabbit.turn_left()
    rabbit.turn_left()
    rabbit.move()
    rabbit.move()
    rabbit.turn_left()
    rabbit.move()
    rabbit.turn_left()
    rabbit.turn_left()
    rabbit.turn_left()
    rabbit.move()
    rabbit.move()
    rabbit.turn_left()
    rabbit.move()
    rabbit.turn_left()
    rabbit.turn_left()
    rabbit.turn_left()
    rabbit.move()
    rabbit.move()
    rabbit.turn_left()
    rabbit.move()
    rabbit.turn_left()
    rabbit.turn_left()
    rabbit.turn_left()
    rabbit.move()


rabbit.move()
turn_right()

[미션] 당근 찾아 가져오기
세 귀퉁이 중 한 곳에만 있는 당근을 찾아 왼쪽 아래로 가져와 심어줍시다.
채점 중에는 세 귀퉁이 중 어디에 심어질 지 알 수 없어서 모두 검사해야 합니다. 월드맵의 크기는 동일합니다.

앞으로 한 칸 가기: rabbit.move()

좌회전: rabbit.turn_left()

당근 뽑기: rabbit.pick_carrot()

당근 심기: rabbit.drop_carrot()

토끼가 당근 위에 있는지 확인하기: rabbit.on_carrot() (당근 위에 있을 경우 True를 반환합니다)

Tip!
‘조건문’은 조건의 결과가 True라면 실행하고, False라면 넘어가는 것을 말합니다. 조건은 다음과 같은 방법으로 할 수 있습니다.

if 조건:
    실행 1
    실행 2

# 토끼와 엘리스월드를 불러올 모듈을 호출합니다.
from elicerabbits import *
from time import *

# 토끼와 엘리스월드를 소환합니다!
# 주석의 위치를 바꿔가며 다른 월드로도 실행해 보세요!
load_world("worlds/Move1.wld")
#load_world("worlds/Move2.wld")
#load_world("worlds/Move3.wld")
rabbit = Rabbit()
rabbit.set_pause(0.2)
# 토끼의 경로를 파란색으로 표시합니다.
rabbit.set_trace('blue')

# 토끼가 미션을 수행할 수 있도록 아래 코드를 작성해주세요!
for i in range(4):
    rabbit.move()
    rabbit.move()
    rabbit.move()
    rabbit.move()

    rabbit.turn_left()

    if rabbit.on_carrot():
        rabbit.pick_carrot()

rabbit.drop_carrot()
